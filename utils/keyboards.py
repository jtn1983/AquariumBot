# utils/keyboards.py

from telegram import ReplyKeyboardMarkup, KeyboardButton
from parameters import PARAMETERS
from types_map import TYPE_MAP

def main_menu():
    return ReplyKeyboardMarkup(
        [[KeyboardButton("–ú–æ–∏ –∞–∫–≤–∞—Ä–∏—É–º—ã")],
         [KeyboardButton("–î–æ–±–∞–≤–∏—Ç—å –∞–∫–≤–∞—Ä–∏—É–º")]],
        resize_keyboard=True
    )

def aquarium_menu():
    return ReplyKeyboardMarkup(
        [
            [KeyboardButton("‚ûï –ò–∑–º–µ—Ä–µ–Ω–∏–µ"), KeyboardButton("üìÖ –ò—Å—Ç–æ—Ä–∏—è")],
            [KeyboardButton("–ì—Ä–∞—Ñ–∏–∫"), KeyboardButton("üóí –ó–∞–º–µ—Ç–∫–∏"), KeyboardButton("–°–æ–≤–µ—Ç—ã")], 
            [KeyboardButton("–ù–∞—Å—Ç—Ä–æ–π–∫–∞"), KeyboardButton("–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ")], 
            [KeyboardButton("–í–µ—Ä–Ω—É—Ç—å—Å—è")]
        ],
        resize_keyboard=True
    )

def setting_keyboard():
    return ReplyKeyboardMarkup(
        [
            [KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ"), KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –ª–∏—Ç—Ä–∞–∂")],
            [KeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å —Ç–∏–ø"), KeyboardButton("–£–¥–∞–ª–∏—Ç—å –∞–∫–≤–∞—Ä–∏—É–º")],
            [KeyboardButton("–ù–∞–∑–∞–¥")]
        ],
        resize_keyboard=True
    )

def param_keyboard(aq_type: str):
    marine = {"–°–æ–ª–µ–Ω–æ—Å—Ç—å", "–ö–∞–ª—å—Ü–∏–π Ca", "–ú–∞–≥–Ω–∏–π Mg"}
    kb = []
    aq_type_en = TYPE_MAP.get(aq_type, "marine")
    for p, n in PARAMETERS.items():
        if aq_type_en == "fresh" and p in marine:
            continue
        limits = n[aq_type_en]
        kb.append([KeyboardButton(f"{p} ({limits['min']}-{limits['max']} {limits['unit']})")])
    kb.append([KeyboardButton("–û—Ç–º–µ–Ω–∞")])
    return ReplyKeyboardMarkup(kb, resize_keyboard=True)

def cancel_keyboard():
    return ReplyKeyboardMarkup([[KeyboardButton("–û—Ç–º–µ–Ω–∞")]], resize_keyboard=True)

def notes_list_menu(has_prev: bool, has_next: bool):
    rows = [[KeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–º–µ—Ç–∫—É")]]
    nav = []
    if has_prev:
        nav.append(KeyboardButton("‚¨ÖÔ∏è –ü—Ä–µ–¥—ã–¥—É—â–∏–µ"))
    if has_next:
        nav.append(KeyboardButton("‚û°Ô∏è –°–ª–µ–¥—É—é—â–∏–µ"))
    if nav:
        rows.append(nav)
    rows.append([KeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥ –∫ –∞–∫–≤–∞—Ä–∏—É–º—É")])
    return ReplyKeyboardMarkup(rows, resize_keyboard=True)

def note_view_menu(is_pinned: bool):
    pin_label = "üìå –û—Ç–∫—Ä–µ–ø–∏—Ç—å" if is_pinned else "üìå –ó–∞–∫—Ä–µ–ø–∏—Ç—å"
    return ReplyKeyboardMarkup(
        [
            [KeyboardButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å"), KeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å")],
            [KeyboardButton(pin_label), KeyboardButton("‚Ü©Ô∏è –ö —Å–ø–∏—Å–∫—É –∑–∞–º–µ—Ç–æ–∫")],
        ],
        resize_keyboard=True
    )

def note_delete_confirm_menu():
    return ReplyKeyboardMarkup(
        [
            [KeyboardButton("‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å")],
            [KeyboardButton("‚Ü©Ô∏è –û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è")],
        ],
        resize_keyboard=True
    )


def note_add_menu():
    return ReplyKeyboardMarkup(
        [
            [KeyboardButton("‚ûï –§–æ—Ç–æ"), KeyboardButton("‚úèÔ∏è –¢–µ–∫—Å—Ç")],
            [KeyboardButton("‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å"), KeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞")],
        ],
        resize_keyboard=True
    )
